/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package bitmap.transformer;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;

import java.util.Arrays;

public class App {



    public static void main(String[] args) {

       //System.out.println(Arrays.toString(args));
        if(args.length ==3){

            colorPalletTransforms bitmapImageColor=new colorPalletTransforms(args[0], args[1]);
            rasterDataTransforms bitmapImageRaster=new rasterDataTransforms(args[0], args[1]);

            switch(args[2]) {
                case "Invert":
                        bitmapImageColor.readBitmapFile();
                    bitmapImageColor.convertToInvert();
                    bitmapImageColor.writeBitmapFile();

                    break;

                case "Randomize":

                    bitmapImageColor.readBitmapFile();
                    bitmapImageColor.convertToRandomize();
                    bitmapImageColor.writeBitmapFile();


                    break;
                case "Black And White":
                    bitmapImageColor.readBitmapFile();
                    bitmapImageColor.convertToBlackAndWhite();
                    bitmapImageColor.writeBitmapFile();
                    break;

                case "Pixilate":
                    bitmapImageRaster.readBitmapFile();
                    bitmapImageRaster.pixilate();
                    bitmapImageRaster.writeBitmapFile();
                    break;
//                case "Add Border":
//                    bitmapImageRaster.readBitmapFile();
//                    bitmapImageRaster.addBorder();
//                    bitmapImageRaster.writeBitmapFile();
//                    break;
//                case "Add Watermark":
//                    bitmapImageRaster.readBitmapFile();
//                    bitmapImageRaster.addWatermark();
//                    bitmapImageRaster.writeBitmapFile();
//                    break;
                case "Rotate Right":
                    bitmapImageRaster.readBitmapFile();
                    bitmapImageRaster.rotateRight();
                    bitmapImageRaster.writeBitmapFile();
                    break;
                case "Rotate Left":
                    bitmapImageRaster.readBitmapFile();
                    bitmapImageRaster.rotateLeft();
                    bitmapImageRaster.writeBitmapFile();
                    break;
                default:
                    System.out.println("Something went wrong please contact the system administrator");
            }
//
            System.out.println("Creating image ");
            System.out.println("Processing... ");
            System.out.println("your image is ready in "+args[1]+" directory");


        }else{
            System.out.println("input is wrong the files should be provides is : input-file-path output-file-path \"transfrom-name\"");
        }
       // System.out.println(Arrays.toString(args));
//            colorPalletTransforms bitmapImage=new colorPalletTransforms("eviltower.bmp" ,"sss.png");
//           bitmapImage.readBitmapFile();
//           bitmapImage.convertToInvert();
//           bitmapImage.writeBitmapFile();
//        rasterDataTransforms bitmapImageRaster=new rasterDataTransforms("eviltower.bmp" ,"sss.png");
//        bitmapImageRaster.readBitmapFile();
//        bitmapImageRaster.addBorder();
//        bitmapImageRaster.writeBitmapFile();


    }
}